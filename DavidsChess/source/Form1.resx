<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAKCgAAAEACACoCwAAFgAAACgAAAAoAAAAUAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAASEhcAExMYABQUGQAVFRoAFhYbABgYHAAZGR0AGxsgAB0dIQAkJCkAOTk9AEhITABNTVEAVVVZAFdX
        WwAYXaQAGV2kABlepAAaXqQAGV6lABpepQAbX6UAHGCmAB1gpgAdYaYAH2KnACBjpwAiZKgAI2WoACRl
        qQApaasAKmmrAC1srAAubK0AL22sADBurgAxbq4ANXGvADh0sAA5dLAAOHSxAEN7tQBHfLMARHy1AEh/
        twBJf7cAS4G4AE2CuQBWh7sAVYi8AF6OvwBgkMEAaJXDAGuXxQChoaMAc53IAHWeyQB5ocoAe6LLAIis
        0ACMrtIAja/SAJS01QCZt9cAnLrYAMDAwACkv9sAqsHYAKzF3gCvx+AAtcviALvP5AC/0uYA2dnaAMbX
        6QDg39cA4eDWAOHg1wDi4dcA4uHYAOPi2ADj4tkA4eHfAOTk2gDl5NsA3eThAOXl3ADm5d0A5eXjAOjn
        3wDp6eEA3efxAOvq5ADr6+QA3+nzAO3t5wDG7+8A4uv0AMjw8ADK8PAAy/DwAO/v6gDe9PMA9PPwAOL3
        9wDn+PgA9fn3APf6+AD5+vkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAORYWFhYTDw8PDyVAVUxMTExMTExMTExMTExMTExMTExMTExMTExMTA8PDw8PDw8PDw8PDw8P
        MkRMTExMTExMTExMTExMTExMTExMTExMTEwPDw8PDw8PDw8PDw8PDw8PDw8yTExMTExMTExMTExMTExM
        TExMTExMDw8PDw8PDw8PDw8PDw8PDw8PDw8PEzVGTExMTExMTExMTExMTExMTA8PDw8PDw8PDw8PDw8P
        Dw8PDw8PDw8PDw8TNUxMTExMTExMTExMTEwPDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8uTExM
        TExMTExMDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8gRCkPDw8PDw8PSExMTExMTA8PLQAAAAAAAAAAAAoP
        Dw8PDw8PDyBEYGBgGw8PDw8PNUxMTExMTEwPDzAAAAAAAAAAAAAADw8PDw8PJUdgYGBgYEQPDw8PEExM
        TExMTExMDw8qAAAAAAAAAAAAAA8PDw8XPmBgYGBgYGA/Dw8PD0tMTExMTExMTA8PIgAAAAAAAAAAAAsP
        Dw8YYGBgYGBgYGBgNw8PDzpMTExMTExMTEwPDx8AAAAAAAAAAABDDw8PDzdgYGBgYGBgYDMPDxNMTExM
        TExMTExMDw8cDAAAAAAAAAADFA8PDw8UW2BgYGBgYGBbEQ9MTExMTExMTExMTA8PGkEAAAAAAAAANg8P
        Dw8PDyFgYGBgYGBgYDg9TExMTExMTExMTEwPDw8mAAAAAAAAACcPDw8PDw8PGTRgYGBgYGBgTExMTExM
        TExMTExMDw8PKAAAAAAAAAAkDw8PDw8PDw8PK2BgYGBgYWNMTExMTExMTExMTA8PDygAAAAAAAAAHg8P
        Dw8PDw8PDw9KYGBgYGBgTExMTExMTExMTEwPDw8oAgAAAAAAAywPDw8PDw8PDw8PI2BgYGBgYGBMTExM
        TExMTExMOy8PKAcAAAAAAAQXDw8PDw8PDw8PDw9CYGBgYGBgTExMTExMTExMTGVOX2wFAAAAAAACEw8P
        Dw8PDw8PDw8PHUVgYGBgYGBMTExMTExMTExfTExTAgAAAAAAADwxDw8PDw8PDw8PDzFpYGBgYGBgYkxM
        TExMTExMXUxMUwAAAAAAAABlTExMXkw/NRUPDxJMTGBgYGBgYGBMTExMTExMTFxMTFMAAAAAAAAATkxM
        TExMTExMTExMTExMYGBgYGBmTExMTExMTExaTExTAAAAAAAAAE5MTExMTExMTExMTExMTGBgYGBoTExM
        TExMTExMWUxMUwAAAAAAAABMTExMTExMTExMTExMTExMYGRgYGtMTExMTExMTFlMTFMAAQYJBAIATUxM
        TExMTExMTExMTExMTExMamBgYExMTExMTExXTExMX2dYDQlOTExMTExMTExMTExMTExMTExMTExMTExM
        TExMTExMVkxMTExMTAAOTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTFRMTExMTEwISUxMTExM
        TExMTExMTExMTExMTExMTExMTExMTExMTExTTExMTExMUlBMTExMTExMTExMTExMTExMTExMTExMTExM
        TExMTExMUUxMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTFBMTExMTExMTExMTExM
        TExMTExMTExMTExMTExMTExMTExMTExMTExQTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExM
        TExMTExMT0xMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTE9MTExMTExMTExMTExM
        TExMTExMTExMTExMTExMTExMTExMTExMTExOTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExM
        TExMTExMTkxMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTE5MTExMTExMTExMTExM
        TExMTExMTExMTExMTExMTExMTExMTExMTExOTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExM
        TExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExPT09PT09PT09PWQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA
</value>
  </data>
</root>